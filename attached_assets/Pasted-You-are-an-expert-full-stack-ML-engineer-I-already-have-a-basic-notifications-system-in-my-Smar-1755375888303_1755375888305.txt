You are an expert full-stack + ML engineer.  
I already have a basic notifications system in my Smart Money Tracker app (Next.js frontend + Express/Node backend + PostgreSQL + Prisma ORM).  

I want to *make notifications smarter and context-aware*:  

1. *Spending patterns*  
   - If spending in a category is unusually high compared to the user’s historical average (e.g. > 20% deviation) → notify:  
     "Your {category} spending is {delta}% higher than your usual trend."  

2. *Month-to-month changes*  
   - If this month’s spending in a category is higher than last month’s by a significant margin → notify:  
     "Your {category} expenses have risen by {delta}% since last month."  

3. *Threshold warnings*  
   - If total spending in a category hits a *user-defined threshold* (e.g. dining-out ≥ ₹5,000) → notify:  
     "You’ve reached your spending threshold for {category}."  

4. *Schema updates*  
   - Extend notifications with:  
     - category (string)  
     - trigger_type (TREND | MONTHLY_COMPARISON | THRESHOLD)  
     - trigger_value (numeric)  
     - acknowledged (boolean, default: false)  

5. *Backend logic*  
   - Create generateSmartNotifications(userId) function:  
     - Fetch transactions + user preferences.  
     - Run trend detection + threshold checks in *O(n)* time where n = user transactions.  
     - Insert new notifications only if not already sent this cycle.  

6. *Express routes*  
   - POST /api/notifications/smart/check → run notification engine + return new notifications.  
   - GET /api/notifications/smart → fetch user’s smart notifications.  

7. *Frontend (React + Tailwind)*  
   - Update NotificationsPanel.tsx to group notifications by category + trigger type.  
   - Add color coding:  
     - *Red* = Threshold warning  
     - *Yellow* = Trend/Monthly increase  
     - *Blue* = General awareness  

Generate complete drop-in code for:  
- Prisma schema update  
- Notification engine (generateSmartNotifications)  
- Express route handlers  
- React component updates  

Make the implementation modular and compatible with an existing Smart Money Tracker project.